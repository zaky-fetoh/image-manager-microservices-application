version: '3'

services:
  image-storage:
    image: image-storage
    build: 
      context: ./src/image-storage
      dockerfile: Dockerfile-dev
    container_name: image-storage
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - SER_REG_HOST=service-registry
      - SER_REG_PORT=3000
    volumes:
      - ./src/image-storage/:/user/src/app
      # - ./src/image-storage/IMAGE_DB:./IMAGE_DB
      # - ./src/image-storage/ENCR_IMAGE_DB:./ENCR_IMAGE_DB
    restart: "no"

  mongo:
    image: mongo
    container_name: mongo
    # restart: always
    ports:
      - 27017:27017
    # volumes:
    #   - ./MDB:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL:"mongodb://mongo:27017/"
    depends_on:
      - mongo
  
  image-manager:
    image: image-manager
    container_name: image-manager
    build: 
      context: ./src/image-manager
      dockerfile: Dockerfile-dev
    restart: "no"
    ports:
      - "3001:3000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/IM
      - RABBITMQ=amqp://RabbitMQ:5672/
      - MQ_EXCHANGE=deepModel
      - IMAGEDISK_HOST=image-storage
      - IMAGEDISK_PORT=3000
      - PORT=0
      - SER_REG_HOST=service-registry
      - SER_REG_PORT=3000
      - ENV=Docker-compose
    volumes:
      - ./src/image-manager:/user/src/app
    depends_on:
      - mongo
      - service-registry
  
  service-registry:
    image: service-registry
    container_name: service-registry
    build:
      context: ./src/service-registry
      dockerfile: Dockerfile-dev
    restart: "no"
    ports:
      - "2222:3000"
    environment:
      - DB_URI=mongodb://mongo:27017/SerReg
      - ENV=Docker-compose
      - PORT=3000
    volumes:
      - ./src/service-registry:/user/src/app
    depends_on:
      - mongo

  route-advertisement:
    image: route-advertisement
    container_name: route-advertisement
    build:
      context: ./src/route-advertisement
      dockerfile: Dockerfile-dev
    restart: "no"
    ports:
      - "2223:3000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/RR
      - ENV=Docker-compose
      - SER_REG_HOST=service-registry
      - SER_REG_PORT=3000
    volumes:
      - ./src/route-advertisement:/user/src/app
    depends_on:
      - mongo
      - service-registry

  # image-classifier:
  #   image: image-classifier
  #   container_name: image-classifier
  #   build:
  #     context: ./src/image-classification
  #     dockerfile: Dockerfile-dev
  #   environment:
  #     - IMAGEDISK_HOST=image-storage
  #     - IMAGEDISK_PORT=3000
  #   volumes:
  #     - ./src/image-classification:/app

  RabbitQM:
    container_name: RabbitMQ
    image: rabbitmq:3.11.2-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always